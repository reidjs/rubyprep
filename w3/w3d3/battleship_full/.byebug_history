q
cell
@grid[pos[0]][pos[1]]
pos
p cell
p value
q
n
p @grid[pos[0]][pos[1]]
p cell
n
p cell
p value
q
value
cell
c
location
c
location
q
location
p location
q
y
size
x
x2
n
y2
x2
pos
rot
x2
y2
n
y2
x2
x
size
rot
n
pos
rot
size
x
c
n
x2
n
x2
p x
q
p x
c
q
size
xsize
p xpsize
p x
q
self.class.ancestors
class.ancestors
self.class.ancestors[1]
self.class.ancestors[0]
self.class.ancestors
self.inherited
self.class.class.class
self.class.class
self.class
p self.class.methods
p self.class.super
p self.class
p self.superclass
p self.class.super
p self.class.class
p self.class
p self
q
p @ships_to_place
q
p @ships_to_place
q
p self
p @ships_to_place
q
p @board
p board
n
p @board.grid
n
p spaces
n
p ship
q
n
q
n
q
n
ship
@ships_to_place.include?(:DD)
@ships_to_place
ship
p input
q
pos != false
pos == false
pos
pos == true
p @SHIPS[@grid[1][1]].nil?
p @SHIPS[@grid[1][1]]
p @grid[1][1]
p pos
 ppos
c
q
c
q
p rot
p y2
p x
p x1
p x2
q
p @board.traverse(pos, [y2, x2])
